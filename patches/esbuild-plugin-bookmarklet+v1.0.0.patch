diff --git a/node_modules/esbuild-plugin-bookmarklet/esm/_dnt.shims.js b/node_modules/esbuild-plugin-bookmarklet/esm/_dnt.shims.js
deleted file mode 100644
index 8b4e5a7..0000000
--- a/node_modules/esbuild-plugin-bookmarklet/esm/_dnt.shims.js
+++ /dev/null
@@ -1,62 +0,0 @@
-import { Deno } from "@deno/shim-deno";
-export { Deno } from "@deno/shim-deno";
-const dntGlobals = {
-    Deno,
-};
-export const dntGlobalThis = createMergeProxy(globalThis, dntGlobals);
-// deno-lint-ignore ban-types
-function createMergeProxy(baseObj, extObj) {
-    return new Proxy(baseObj, {
-        get(_target, prop, _receiver) {
-            if (prop in extObj) {
-                return extObj[prop];
-            }
-            else {
-                return baseObj[prop];
-            }
-        },
-        set(_target, prop, value) {
-            if (prop in extObj) {
-                delete extObj[prop];
-            }
-            baseObj[prop] = value;
-            return true;
-        },
-        deleteProperty(_target, prop) {
-            let success = false;
-            if (prop in extObj) {
-                delete extObj[prop];
-                success = true;
-            }
-            if (prop in baseObj) {
-                delete baseObj[prop];
-                success = true;
-            }
-            return success;
-        },
-        ownKeys(_target) {
-            const baseKeys = Reflect.ownKeys(baseObj);
-            const extKeys = Reflect.ownKeys(extObj);
-            const extKeysSet = new Set(extKeys);
-            return [...baseKeys.filter((k) => !extKeysSet.has(k)), ...extKeys];
-        },
-        defineProperty(_target, prop, desc) {
-            if (prop in extObj) {
-                delete extObj[prop];
-            }
-            Reflect.defineProperty(baseObj, prop, desc);
-            return true;
-        },
-        getOwnPropertyDescriptor(_target, prop) {
-            if (prop in extObj) {
-                return Reflect.getOwnPropertyDescriptor(extObj, prop);
-            }
-            else {
-                return Reflect.getOwnPropertyDescriptor(baseObj, prop);
-            }
-        },
-        has(_target, prop) {
-            return prop in extObj || prop in baseObj;
-        },
-    });
-}
diff --git a/node_modules/esbuild-plugin-bookmarklet/esm/mod.js b/node_modules/esbuild-plugin-bookmarklet/esm/mod.js
index 119e4bf..3f95641 100644
--- a/node_modules/esbuild-plugin-bookmarklet/esm/mod.js
+++ b/node_modules/esbuild-plugin-bookmarklet/esm/mod.js
@@ -1,4 +1,5 @@
-import * as dntShim from "./_dnt.shims.js";
+const { Deno } = require("@deno/shim-deno");
+
 const bookmarkletPlugin = {
     name: 'bookmarklet',
     setup(build) {
@@ -20,11 +21,11 @@ const bookmarkletPlugin = {
             const js = result.outputFiles.find(f => f.path.match(/\.js$/));
             const modified = encodeURI("javascript:void " + js.text);
             js.contents = encoder.encode(modified);
-            await dntShim.Deno.writeTextFile(js.path, js.text);
+            await Deno.writeTextFile(js.path, js.text);
         });
         build.onDispose(() => {
-            dntShim.Deno.exit(0);
+            process.exit(0);
         });
     },
 };
-export default bookmarkletPlugin;
+module.exports = bookmarkletPlugin;
diff --git a/node_modules/esbuild-plugin-bookmarklet/esm/package.json b/node_modules/esbuild-plugin-bookmarklet/esm/package.json
deleted file mode 100644
index 3dbc1ca..0000000
--- a/node_modules/esbuild-plugin-bookmarklet/esm/package.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  "type": "module"
-}
